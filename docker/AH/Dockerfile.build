FROM debian:latest as build-env

ENV BUILD_USER_NAME developer
ENV BUILD_HOME_DIR /home/${USER_NAME}
RUN apt-get update && apt-get -y install sudo apt-utils gcc g++ gdb cmake make build-essential

RUN export uid=1000 gid=1000 && \
    mkdir -p ${BUILD_HOME_DIR} && \
    echo "${BUILD_USER_NAME}:x:${uid}:${gid}:${BUILD_USER_NAME},,,:${BUILD_HOME_DIR}:/bin/bash" >> /etc/passwd && \
    echo "${BUILD_USER_NAME}:x:${uid}:" >> /etc/group && \
    echo "${BUILD_USER_NAME} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${BUILD_USER_NAME} && \
    chmod 0440 /etc/sudoers.d/${BUILD_USER_NAME} && \
    chown ${uid}:${gid} -R ${BUILD_HOME_DIR}

RUN apt-get install -y qt5-default qt4-dev-tools qtbase5-examples qtcreator

USER ${BUILD_USER_NAME}
WORKDIR ${BUILD_HOME_DIR}
#CMD ["enter your build command"] --> this produces the binary called myapp


FROM alpine:latest as ops-env
RUN apk update && apk add qt5-qtbase qt5-qtbase-x11 libc6-compat shadow

ENV USER_NAME touchpanel
ENV USER_GROUP touchpanel
ENV HOME_DIR /home/${USER_NAME}

ENV ROOT_PWD hipahipa

RUN set -x \
  && addgroup -g 1000 ${USER_GROUP} \
  && adduser -u 1000 -D -S -G ${USER_GROUP} ${USER_NAME}
RUN echo "root:${ROOT_PWD}" | chpasswd
RUN mkdir -p ${HOME_DIR}

USER ${USER_NAME}
WORKDIR ${HOME_DIR}
#COPY --from=build-env ${BUILD_HOME_DIR}/myapp .
#CMD ["./myapp"]